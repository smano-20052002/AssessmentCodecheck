Ø
IC:\Users\mano.selvaraj\Desktop\FetchWebapi\Controllers\MovieController.cs
	namespace 	
FetchWebapi
 
. 
Controllers !
{! "
[ 
ApiController 
] 
public 
class	  
FetchMovieController #
:$ %
ControllerBase& 4
{4 5
private 
readonly 
Appdbcontext #
context$ +
;+ ,
public		  
FetchMovieController		 #
(		# $
Appdbcontext		$ 0
context		1 8
)		8 9
{		9 :
this

 
.

 
context

 
=

 
context

  
;

  !
} 	
[ 
Route 

(
 
$str 
) 
] 
[ 
HttpGet 
] 
public 
async 
Task 
< 
IEnumerable %
<% &
MovieDetails& 2
>2 3
>3 4
Get4 7
(7 8
)8 9
{9 :
return 
await 
context  
.  !
MovieDetails! -
.- .
ToListAsync. 9
(9 :
): ;
;; <
} 	
[ 	
Route	 
( 
$str $
)$ %
]% &
[ 	
HttpGet	 
] 
public 
ActionResult 
< 
MovieDetails (
>( )
GetIndividual* 7
(7 8
int8 ;
id< >
)> ?
{ 	
var 
movie 
= 
context 
. 
MovieDetails +
.+ ,
Find, 0
(0 1
id1 3
)3 4
;4 5
if 
( 
movie 
== 
null 
) 
{ 
return 
NotFound 
( 
) 
; 
} 
return 
Ok 
( 
movie 
) 
; 
}	 

[	 

Route
 
( 
$str  
)  !
]! "
[ 	
HttpGet	 
] 
public	 
ActionResult 
< 
MovieDetails )
>) *

TotalCount+ 5
(5 6
)6 7
{   	
var!! 

MovieCount!! 
=!! 
context!! $
.!!$ %
MovieDetails!!% 1
.!!1 2
ToList!!2 8
(!!8 9
)!!9 :
.!!: ;
Count!!; @
;!!@ A
return## 
Ok## 
(## 

MovieCount##  
)##  !
;##! "
}$$	 

}&& 	
}'' µ
GC:\Users\mano.selvaraj\Desktop\FetchWebapi\Data\ApplicationDbContext.cs
	namespace 	
FetchWebapi
 
. 
Data 
{ 
public 
class 
Appdbcontext 
: 
	DbContext #
{# $
public 

Appdbcontext 
( 
DbContextOptions (
<( )
Appdbcontext) 5
>5 6
options7 >
)> ?
:@ A
baseB F
(F G
optionsG N
)N O
{ 
}		 
public

 

DbSet

 
<

 
MovieDetails

 
>

 
MovieDetails

 +
{

+ ,
get

, /
;

/ 0
set

1 4
;

4 5
}

5 6
} 
} ×

>C:\Users\mano.selvaraj\Desktop\FetchWebapi\Model\MovieModel.cs
	namespace 	
FetchWebapi
 
. 
Model 
{ 
public 
class 
MovieDetails 
{ 
[ 
Key 
] 	
public 

int 
MovieId 
{ 
get 
; 
set 
; 
}  
[ 
Required 
] 
public 

string 
? 
	moviename 
{ 
get  
;  !
set! $
;$ %
}% &
[		 
Required		 
]		 
public

 
string

 
?

 
	MovieType

 
{

 
get

 !
;

! "
set

" %
;

% &
}

& '
[ 
Required 
] 
public 

string 
? 
MovieLanguage  
{  !
get! $
;$ %
set% (
;( )
}) *
[ 
Required 
] 
public 

string 
? 
MovieDurations !
{! "
get" %
;% &
set& )
;) *
}* +
} 
} „
5C:\Users\mano.selvaraj\Desktop\FetchWebapi\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder		 
.		 
Services		 
.		 #
AddEndpointsApiExplorer		 (
(		( )
)		) *
;		* +
builder

 
.

 
Services

 
.

 
AddSwaggerGen

 
(

 
)

  
;

  !
builder 
. 
Services 
. 
AddDbContext 
< 
Appdbcontext *
>* +
(+ ,
options, 3
=>3 5
options5 <
.< =
UseMySql= E
(E F
builderF M
.M N
ConfigurationN [
.[ \
GetConnectionString\ o
(o p
$str	p ƒ
)
ƒ „
,
„ …
new
… ˆ 
MySqlServerVersion
‰ ›
(
› œ
new
œ Ÿ
Version
  §
(
§ ¨
)
¨ ©
)
© ª
)
ª «
)
« ¬
;
¬ ­
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseHttpsRedirection 
( 
) 
; 
app 
. 
UseAuthorization 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
app   
.   
Run   
(   
)   	
;  	 
